# Template build file for 'cross-aarch64-linux-musl'
#
_binutils_version=2.25
_gcc_version=4.9.2
_musl_version=1.1.8
_linux_version=3.18.5

_triplet=aarch64-linux-musl
_archflags="-march=armv8-a"
_sysroot="/usr/${_triplet}"

pkgname=cross-${_triplet}
version=0.17
revision=1
short_desc="Cross toolchain for ${_triplet} LE Hard Float target (musl)"
maintainer="Juan RP <xtraeme@gmail.com>"
homepage="http://www.voidlinux.eu"
license="Public Domain"
distfiles="
 http://ftp.gnu.org/pub/gnu/binutils/binutils-${_binutils_version}.tar.bz2
 http://ftp.gnu.org/pub/gnu/gcc/gcc-${_gcc_version}/gcc-${_gcc_version}.tar.bz2
 http://www.kernel.org/pub/linux/kernel/v3.x/linux-${_linux_version}.tar.xz
 http://www.musl-libc.org/releases/musl-${_musl_version}.tar.gz"
checksum="22defc65cfa3ef2a3395faaea75d6331c6e62ea5dfacfed3e2ec17b08c882923
 2020c98295856aa13fda0f2f3a4794490757fc24bcca918d52cc8b4917b972dd
 e4442436e59c74169e98d38d2e2a434c7b73f8eda0aa8f20e454eaf52270fc90
 fa928506415b9c555977daaf874c190eaf7fbbd16028cc5c5f33a00a83227813"

lib32disabled=yes
nocross=yes
nodebug=yes
create_wrksrc=yes

hostmakedepends="perl flex"
makedepends="zlib-devel gmp-devel mpfr-devel libmpc-devel"
nostrip_files="libgcc.a libgcov.a libgcc_eh.a"
depends="${pkgname}-libc-${version}_${revision}"

_apply_patch() {
	local pname="$(basename $1)"

	if [ ! -f ".${pname}_done" ]; then
		patch -Np1 -i ${1}
		touch .${pname}_done
	fi
}

_binutils_build() {
	[ -f ${wrksrc}/.binutils_build_done ] && return 0

	cd ${wrksrc}
	msg_normal "Building cross binutils bootstrap\n"

	[ ! -d binutils-build ] && mkdir binutils-build
	cd binutils-build

	../binutils-${_binutils_version}/configure \
		--prefix=/usr --target=${_triplet} --with-sysroot=${_sysroot} \
		--disable-nls --disable-multilib --disable-werror \
		--disable-shared --enable-gold

	make configure-host && make ${makejobs}
	make install

	touch ${wrksrc}/.binutils_build_done
}

_gcc_bootstrap() {
	[ -f ${wrksrc}/.gcc_bootstrap_done ] && return 0

	cd ${wrksrc}/gcc-${_gcc_version}
	_apply_patch ${FILESDIR}/gcc-${_gcc_version}-musl.diff

	msg_normal "Building cross gcc bootstrap\n"

	[ ! -d ../gcc-bootstrap ] && mkdir ../gcc-bootstrap
	cd ../gcc-bootstrap

	CFLAGS="-O0 -g0" CXXFLAGS="-O0 -g0" \
		../gcc-${_gcc_version}/configure --prefix=/usr \
		--target=${_triplet} --with-sysroot=${_sysroot} --with-newlib \
		--enable-languages=c --with-newlib --disable-libssp --disable-nls \
		--disable-libquadmath --disable-threads --disable-decimal-float \
		--disable-shared --disable-libmudflap --disable-libgomp \
		--disable-libatomic

	make ${makejobs}
	make install

	touch ${wrksrc}/.gcc_bootstrap_done
}

_linux_headers() {
	[ -f ${wrksrc}/.linux_build_done ] && return 0

	cd ${wrksrc}
	msg_normal "Building Linux API headers for ARM\n"

	cd linux-${_linux_version}

	make ARCH=arm64 headers_check
	make ARCH=arm64 INSTALL_HDR_PATH=${_sysroot}/usr headers_install

	touch ${wrksrc}/.linux_build_done
}

_musl_build() {
	[ -f ${wrksrc}/.musl_build_done ] && return 0

	cd ${wrksrc}/musl-${_musl_version}
	msg_normal "Building cross musl libc\n"

	CC="${_triplet}-gcc" CFLAGS="-Os -pipe ${_archflags}" \
		./configure --prefix=/usr \

	make ${makejobs}
	make DESTDIR=${_sysroot} install

	touch ${wrksrc}/.musl_build_done
}

_gcc_build() {
	[ -f ${wrksrc}/.gcc_build_done ] && return 0

	cd ${wrksrc}
	msg_normal "Building cross gcc final\n"

	[ ! -d gcc-build ] && mkdir gcc-build
	cd gcc-build

	../gcc-${_gcc_version}/configure \
		--target=${_triplet} --with-sysroot=${_sysroot} --prefix=/usr \
		--enable-languages=c,c++,lto --enable-lto --disable-libsanitizer \
		--disable-multilib --disable-nls --disable-libquadmath \
		--disable-libmudflap --enable-shared \
                --with-gnu-as --with-gnu-ld --disable-multilib \
                --disable-nls --disable-sjlj-exceptions \
                --enable-threads=posix --enable-long-longx \
                --enable-shared --enable-linker-build-id \
                --enable-gnu-unique-object --enable-lto \
                --disable-libquadmath --disable-libatomic \
                --disable-libssp --disable-libmudflap \
                --disable-libsanitizer --disable-libcilkrts \
                --disable-libitm --disable-libvtv --disable-libstdcxx-pch \
                --enable-libstdcxx-time --with-linker-hash-style=gnu

	make ${makejobs}

	touch ${wrksrc}/.gcc_build_done
}

do_build() {
	# Ensure we use sane environment
	unset CC CXX CPP LD AS AR RANLIB OBJDUMP READELF NM
	unset CFLAGS CXXFLAGS CPPFLAGS LDFLAGS
	export CFLAGS="-Os -pipe" CXXFLAGS="-Os -pipe"

	for f in include lib libexec bin sbin; do
		if [ ! -d ${_sysroot}/usr/${f} ]; then
			mkdir -p ${_sysroot}/usr/${f}
		fi
		if [ ! -h ${_sysroot}/${f} ]; then
			ln -sfr ${_sysroot}/usr/${f} ${_sysroot}/${f}
		fi
	done

	_binutils_build
	_gcc_bootstrap
	_linux_headers
	_musl_build
	_gcc_build
}

do_install() {
	for f in include lib libexec bin sbin; do
		if [ ! -d ${DESTDIR}/${_sysroot}/usr/${f} ]; then
			mkdir -p ${DESTDIR}/${_sysroot}/usr/${f}
		fi
		if [ ! -h ${DESTDIR}/${_sysroot}/${f} ]; then
			ln -sfr ${DESTDIR}/${_sysroot}/usr/${f} \
				${DESTDIR}/${_sysroot}/${f}
		fi
	done

	# install linux API headers
	cd ${wrksrc}/linux-${_linux_version}
	make ARCH=arm64 INSTALL_HDR_PATH=${DESTDIR}/${_sysroot}/usr headers_install
	rm -f $(find ${DESTDIR}/${_sysroot}/usr/include -name .install -or -name ..install.cmd)
	rm -rf ${DESTDIR}/${_sysroot}/usr/include/drm

	# install cross binutils
	cd ${wrksrc}/binutils-build
	make DESTDIR=${DESTDIR} install

	# install cross gcc
	cd ${wrksrc}/gcc-build
	make DESTDIR=${DESTDIR} install

	# install musl libc for target
	cd ${wrksrc}/musl-${_musl_version}
	make DESTDIR=${DESTDIR}/${_sysroot} install

	# Remove useless headers.
	rm -rf ${DESTDIR}/usr/lib/gcc/${_triplet}/*/include-fixed/ \
		${DESTDIR}/usr/lib/gcc/${_triplet}/*/include/stddef.h

	# Make ld-musl-armhf.so.1 symlink relative.
	#ln -sf libc.so ${DESTDIR}/${_sysroot}/usr/lib/ld-musl-armhf.so.1

	# Remove unnecessary stuff
	rm -f ${DESTDIR}/usr/lib*/libiberty.a
	rm -rf ${DESTDIR}/usr/share
	rm -rf ${DESTDIR}/${_sysroot}/{etc,var}
	rm -rf ${DESTDIR}/${_sysroot}/usr/{sbin,share,libexec}
	rm -f ${DESTDIR}/${_sysroot}/libexec
	rm -f ${DESTDIR}/${_sysroot}/lib/*.py
}

do_clean() {
	# Remove temporary stuff from masterdir
	rm -rf ${_sysroot}
	rm -f /usr/bin/${_triplet}*
	rm -rf /usr/lib/gcc/${_triplet}
	rm -rf /usr/libexec/gcc/${_triplet}
}

cross-aarch64-linux-musl-libc_package() {
	short_desc+=" - libc files"
	noarch=yes
	noverifydeps=yes
	pkg_install() {
		vmove usr/${_triplet}
		mkdir -p ${DESTDIR}/usr/${_triplet}/usr/
		mv ${PKGDESTDIR}/usr/${_triplet}/usr/bin ${DESTDIR}/usr/${_triplet}/usr

	}
}
